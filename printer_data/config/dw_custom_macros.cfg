###########################################################################
# Custom macros for Happy Hare
###########################################################################

###########################################################################
# Helper macro for tip cutting
#
[gcode_macro _CUT_TIP_MOVE_TO_CUTTER_PIN]
description: Helper to move the toolhead to the target pin in either safe or faster way, depending on toolhead clearance
gcode:
    {% set pin_park_x_loc = params.PIN_PARK_X_LOC|float %}
    {% set pin_park_y_loc = params.PIN_PARK_Y_LOC|float %}
    {% set vars = printer['gcode_macro _MMU_CUT_TIP_VARS'] %}

    {% set safe_margin_x, safe_margin_y = vars.safe_margin_xy|map('float') %}
    {% set travel_speed = vars['travel_speed']|float %}
    {% set cutting_axis = vars['cutting_axis'] %}

    {% if ((printer.gcode_move.gcode_position.x - pin_park_x_loc)|abs < safe_margin_x) or ((printer.gcode_move.gcode_position.y - pin_park_y_loc)|abs < safe_margin_y) %}
        # Make a safe but slower travel move
        {% if cutting_axis == "x" %}
            G1 X{pin_park_x_loc} F{travel_speed * 60}
            G1 Y{pin_park_y_loc} F{travel_speed * 60}
        {% else %}
            G1 X{pin_park_x_loc+10} F{travel_speed * 60}
            G1 Y{pin_park_y_loc} F{travel_speed * 60}
            G1 X{pin_park_x_loc} F{travel_speed * 60}
        {% endif %}
    {% else %}
        G1 X{pin_park_x_loc} Y{pin_park_y_loc} F{travel_speed * 60}
    {% endif %}


###########################################################################
# Helper macro for tip cutting
#
[gcode_macro _CUT_TIP_DO_CUT_MOTION]
description: Helper to do a single cut movement
gcode:
    {% set pin_park_x_loc = params.PIN_PARK_X_LOC | float %}
    {% set pin_park_y_loc = params.PIN_PARK_Y_LOC | float %}
    {% set vars = printer['gcode_macro _MMU_CUT_TIP_VARS'] %}
    {% set cutting_axis = vars['cutting_axis'] %}

    {% set pin_loc = vars['pin_loc_compressed']|default(-999)|float %}
    {% if pin_loc != -999 %}
        # Old one-dimensional pin_loc_compressed config
        {% if cutting_axis == "x" %}
            {% set pin_loc_compressed_x = pin_loc %}
            {% set pin_loc_compressed_y = pin_park_y_loc %}
        {% else %}
            {% set pin_loc_compressed_x = pin_park_x_loc %}   
            {% set pin_loc_compressed_y = pin_loc %}
        {% endif %}
    {% else %}
        # New config
        {% set pin_loc_compressed_x, pin_loc_compressed_y = vars.pin_loc_compressed_xy|map('float') %}
    {% endif %}
        
    {% set cut_fast_move_fraction = vars['cut_fast_move_fraction']|float %}
    {% set cut_fast_move_speed = vars['cut_fast_move_speed']|float %}
    {% set cut_slow_move_speed = vars['cut_slow_move_speed']|float %}
    {% set cut_dwell_time = vars['cut_dwell_time']|float %}
    {% set evacuate_speed = vars['evacuate_speed']|float %}
    {% set rip_length = vars['rip_length']|float %}
    {% set rip_speed = vars['rip_speed']|float %}


    {% set fast_slow_transition_loc_x = (pin_loc_compressed_x - pin_park_x_loc) * cut_fast_move_fraction + pin_park_x_loc|float %}
    {% set fast_slow_transition_loc_y = (pin_loc_compressed_y - pin_park_y_loc) * cut_fast_move_fraction + pin_park_y_loc|float %}
    G1 X{fast_slow_transition_loc_x} Y{fast_slow_transition_loc_y} F{cut_fast_move_speed * 60} # Fast move to initiate contact of the blade with filament
    G1 X{pin_loc_compressed_x} Y{pin_loc_compressed_y} F{cut_slow_move_speed * 60} # Do the cut in slow move

    G4 P{cut_dwell_time}
    {% if rip_length > 0 %}
        G1 E-{rip_length} F{rip_speed * 60}
    {% endif %}

    G1 X{pin_park_x_loc+10} Y{pin_park_y_loc} F{evacuate_speed * 60} # Evacuate
    G1 X{pin_park_x_loc+10} Y{pin_park_y_loc+20} F{evacuate_speed * 60} # Evacuate